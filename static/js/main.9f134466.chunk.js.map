{"version":3,"sources":["logo.svg","components/common/NavBar/index.js","state_management/search/index.js","api/corpus/index.js","components/search/LanguagesAppBar/index.js","components/search/ResultsPlaceholder/index.js","components/search/ResultsTable/index.js","components/common/LabeledSelect/index.js","components/search/AdvancedOptionsGroup/index.js","components/search/TextSelectGroup/index.js","components/search/SearchParametersForm/index.js","components/search/ReactivePanels/index.js","components/search/SearchPrototypeD/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","display","logo","height","maxHeight","width","margin","padding","routeGrid","verticalAlign","route","NavBar","props","classes","routes","map","i","Grid","item","className","key","link","sm","Button","component","Link","to","name","AppBar","position","Toolbar","container","alignItems","xs","src","alt","spacing","DEFAULT_STATE","searchID","status","availableLanguages","language","availableTexts","sourceText","author","title","targetText","stopwords","searchParameters","unitType","feature","stoplist","stoplistBasis","scoreBasis","frequencyBasis","maxDistance","distanceBasis","dropScoresBelow","results","resultCount","currentPage","rowsPerPage","shouldFetchTexts","shouldInitiateSearch","shouldFetchResults","disableSearch","asyncPending","searchInProgress","fetchLanguagesError","fetchTextsError","fetchStoplistError","initiateSearchError","fetchResultsError","fetchLanguagesPending","type","payload","updateSearchParameters","getSearchStatusPending","fetchResultsSuccess","fetchLanguagesAction","pending","dispatch","console","log","actions","axios","method","url","crossDomain","responseType","then","response","data","languages","catch","error","updateLanguageAction","fetchTextsAction","shouldFetch","params","texts","updateSourceTextAction","event","value","realval","undefined","object_id","updateTargetTextAction","fetchStoplistAction","list_size","Array","works","initiateSearchAction","source","target","headers","contentType","units","freq_basis","max_distance","parseInt","distance_basis","location","split","parallels","getSearchStatusAction","done","fetchResultsAction","length","updateCurrentPageAction","updateRowsPerPageAction","PanelOpenIcon","onClick","open","icon","Hidden","only","IconButton","aria-label","connect","state","bindActionCreators","fetchLanguages","updateLanguage","handlePanelOpen","useState","currentTab","setCurrentTab","tabs","idx","Tab","label","tabIdx","handleChangeTab","id","index","Tabs","flexDirection","justifyContent","spacer","AwaitingSearchCard","Card","CardMedia","CardContent","Typography","variant","SearchInProgressCard","CircularProgress","fetchResults","getSearchStatus","toLowerCase","setTimeout","card","ResultsTableHeader","labels","sortHeader","sortOrder","updateSortHeader","updateSortOrder","sortDirection","headCells","itemNorm","TableCell","align","header","newSortHeader","newSortOrder","handleSortUpdate","TableSortLabel","active","direction","TableHead","TableRow","ResultsTableBody","bodyCells","hover","tabIndex","source_tag","target_tag","matched_features","join","source_snippet","target_snippet","Math","round","score","TableBody","searchParams","initiateSearch","updateCurrentPage","updateRowsPerPage","setSortHeader","setSortOrder","start","end","min","displayResults","sort","a","b","slice","Table","TablePagination","count","labelRowsPerPage","onChangePage","onChangeRowsPerPage","page","rowsPerPageOptions","select","marginTop","marginLeft","LabeledSelect","handleChange","helperText","options","menuItems","x","MenuItem","FormControl","fullWidth","Select","onChange","FormHelperText","prepListItem","dummyUnitTypes","dummyFeatures","dummyStoplist","dummyStoplistBasis","dummyScoreBasis","dummyFrequencyBasis","dummyMaxDistance","dummyDistanceMetric","dummyDropScoresBelow","unitTypesList","featuresList","stoplistList","stoplistBasisList","scoreBasisList","frequencyBasisList","maxDistanceList","distanceBasisList","dropScoresBelowList","justify","heading","marginBottom","breakpoints","up","down","TextSelectGroup","handleTextChange","loading","loadingText","onOpen","selection","textList","authorItems","uniqBy","textItems","filter","t","Autocomplete","defaultValue","getOptionLabel","option","renderInput","TextField","formControl","minWidth","shouldFetchStoplist","fetchTexts","fetchStoplist","updateSource","updateTarget","basis","ExpansionPanel","expanded","ExpansionPanelDetails","md","color","disabled","ExpansionPanelSummary","aria-controls","expandIcon","panelStyles","marginRight","float","overflowX","overflowY","ReactivePanel","children","Box","ReactivePanels","React","Component","constructor","super","getTotalWidth","window","innerWidth","document","documentElement","clientWidth","handleClickDivider","stopPropagation","preventDefault","this","setState","moving","handleMoveDivider","totalWidth","mouseX","pageX","leftMaxWidth","rightMinWidth","leftMinWidth","leftWidth","max","rightWidth","unit","handleReleaseDivider","render","leftWidthVal","leftMinWidthVal","rightWidthVal","rightMinWidthVal","onMouseMove","onMouseUp","Divider","divider","onMouseDown","orientation","withStyles","paddingTop","paddingmarginBottom","paddingmarginLeft","paddingRight","cursor","middleware","thunk","store","createStore","action","getSearchStatusError","resultsPerPage","applyMiddleware","SearchPrototypeD","isOpen","setIsOpen","App","path","exact","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f134466.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  logo: {\n    height: '100%',\n    maxHeight: '50px',\n    width: 'auto',\n    margin: 0,\n    padding: 0\n  },\n  routeGrid: {\n    display: 'flex',\n    height: '100%',\n    verticalAlign: 'middle'\n  },\n  route: {\n    height: '100%',\n    verticalAlign: 'middle'\n  }\n}));\n\n\nexport default function NavBar(props) {\n  const classes = useStyles();\n  const routes = props.routes.map((route, i) => {\n    return (\n      <Grid item\n        className={classes.routeGrid}\n        key={route.link}\n        sm={2}\n      >\n        <Button\n          className={classes.route}\n          component={Link}\n          to={route.link}\n        >\n          {route.name}\n        </Button>\n      </Grid>\n    );\n  });\n\n  return (\n    <AppBar className={classes.root} position=\"static\">\n      <Toolbar className=\"\">\n        <Grid container alignItems=\"flex-start\">\n          <Grid item xs={3}>\n            <img\n              className={classes.logo}\n              src={\"/TesseraeLogo.png\"}\n              alt=\"Tesserae\"\n            />\n          </Grid>\n          <Grid item xs={9}>\n            <Grid container alignItems=\"flex-end\" spacing={2}>\n              {routes}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","/**\n * Utilities for managing one or more active Tesserae searches.\n *\n * @module state_management/search\n * @author Jeff Kinnison <jkinniso@nd.edu>\n */\n\n\n/**\n * Default state for Tesserae searches.\n */\nexport const DEFAULT_STATE = {\n  searchID: null,\n  status: null,\n  availableLanguages: [],\n  language: '',\n  availableTexts: [],\n  sourceText: {author: '', title: ''},\n  targetText: {author: '', title: ''},\n  stopwords: [],\n  searchParameters: {\n    unitType: 'phrase',\n    feature: 'lemmata',\n    stoplist: '10',\n    stoplistBasis: 'corpus',\n    scoreBasis: 'word',\n    frequencyBasis: 'corpus',\n    maxDistance: '10 words',\n    distanceBasis: 'frequency',\n    dropScoresBelow: '6'\n  },\n  results: [],\n  resultCount: 0,\n  currentPage: 0,\n  rowsPerPage: 100,\n  shouldFetchTexts: true,\n  shouldInitiateSearch: false,\n  shouldFetchResults: false,\n  disableSearch: false,\n  asyncPending: false,\n  searchInProgress: false,\n  fetchLanguagesError: null,\n  fetchTextsError: null,\n  fetchStoplistError: null,\n  initiateSearchError: null,\n  fetchResultsError: null\n};\n\n\n/**\n * Action types and their associted actions.\n */\nconst FETCH_LANGUAGES_PENDING = 'FETCH_LANGUAGES_PENDING';\nconst FETCH_LANGUAGES_SUCCESS = 'FETCH_LANGUAGES_SUCCESS';\nconst FETCH_LANGUAGES_ERROR = 'FETCH_LANGUAGES_ERROR';\nconst UPDATE_LANGUAGE = 'UPDATE_LANGUAGE';\nconst FETCH_TEXTS_PENDING = 'FETCH_TEXTS_PENDING';\nconst FETCH_TEXTS_SUCCESS = 'FETCH_TEXTS_SUCCESS';\nconst FETCH_TEXTS_ERROR = 'FETCH_TEXTS_ERROR';\nconst UPDATE_SOURCE_TEXT = 'UPDATE_SOURCE_TEXT';\nconst UPDATE_TARGET_TEXT = 'UPDATE_TARGET_TEXT';\nconst UPDATE_SEARCH_PARAMETERS = 'UPDATE_SEARCH_PARAMETERS';\nconst FETCH_STOPLIST_PENDING = 'FETCH_STOPLIST_PENDING';\nconst FETCH_STOPLIST_SUCCESS = 'FETCH_STOPLIST_SUCCESS';\nconst FETCH_STOPLIST_ERROR = 'FETCH_STOPLIST_ERROR';\nconst INITIATE_SEARCH_PENDING = 'INITIATE_SEARCH_PENDING';\nconst INITIATE_SEARCH_SUCCESS = 'INITIATE_SEARCH_SUCCESS';\nconst INITIATE_SEARCH_ERROR = 'INITIATE_SEARCH_ERROR';\nconst GET_SEARCH_STATUS_PENDING = 'GET_SEARCH_STATUS_PENDING';\nconst GET_SEARCH_STATUS_SUCCESS = 'GET_SEARCH_STATUS_SUCCESS';\nconst GET_SEARCH_STATUS_ERROR = 'GET_SEARCH_STATUS_ERROR';\nconst FETCH_RESULTS_PENDING = 'FETCH_RESULTS_PENDING';\nconst FETCH_RESULTS_SUCCESS = 'FETCH_RESULTS_SUCCESS';\nconst FETCH_RESULTS_ERROR = 'FETCH_RESULTS_ERROR';\nconst UPDATE_CURRENT_PAGE = 'UPDATE_CURRENT_PAGE';\nconst UPDATE_ROWS_PER_PAGE = 'UPDATE_ROWS_PER_PAGE';\n\n\n/**\n *  Action creators for a common interface into the state store.\n **/\n\n\n/**\n *  Create an action to fetch available languages from the REST API.\n *\n * @returns {Object} A redux-style action.\n **/\nexport function fetchLanguagesPending() {\n  return {\n    type: FETCH_LANGUAGES_PENDING,\n    payload: {\n      asyncPending: true\n    }\n  };\n}\n\n\n/**\n *  Create an action to save languages fetched from the REST API.\n *\n * @param {Array} availableLanguages - list of languages to make available for search\n * @returns {Object} A redux-style action.\n **/\nexport function fetchLanguagesSuccess(availableLanguages) {\n  return {\n    type: FETCH_LANGUAGES_SUCCESS,\n    payload: {\n      asyncPending: false,\n      availableLanguages: availableLanguages,\n      language: availableLanguages[0]\n    }\n  };\n}\n\n\n/**\n *  Create an action to report an error fetching languages from the REST API.\n *\n * @param {Object} error - error log returned from the request\n * @returns {Object} A redux-style action.\n **/\nexport function fetchLanguagesError(error = {}) {\n  return {\n    type: FETCH_LANGUAGES_ERROR,\n    payload: {\n      asyncPending: false,\n      fetchLanguagesError: error\n    }\n  };\n}\n\n\n/**\n*  Create an action to update the language being searched.\n*\n* @param {String} language - language to filter the text list by\n* @returns {Object} A redux-style action.\n**/\nexport function updateLanguage(language = DEFAULT_STATE.language) {\n  return {\n    type: UPDATE_LANGUAGE,\n    payload: {\n      availableTexts: DEFAULT_STATE.availableTexts,\n      language: language,\n      searchParameters: {\n        ...DEFAULT_STATE.searchParameters\n      },\n      shouldFetchTexts: true\n    }\n  };\n}\n\n\n/**\n *  Create an action to fetch available texts from the REST API.\n *\n * @returns {Object} A redux-style action.\n **/\nexport function fetchTextsPending() {\n  return {\n    type: FETCH_TEXTS_PENDING,\n    payload: {\n      asyncPending: true\n    }\n  };\n}\n\n\n/**\n *  Create an action to save texts fetched from the REST API.\n *\n * @param {Array} availableTexts - list of texts to make available for search\n * @returns {Object} A redux-style action.\n **/\nexport function fetchTextsSuccess(availableTexts) {\n  return {\n    type: FETCH_TEXTS_SUCCESS,\n    payload: {\n      asyncPending: false,\n      availableTexts: availableTexts,\n    }\n  };\n}\n\n\n/**\n *  Create an action to report an error fetching texts from the REST API.\n *\n * @param {Object} error - error log returned from the request\n * @returns {Object} A redux-style action.\n **/\nexport function fetchTextsError(error = {}) {\n  return {\n    type: FETCH_TEXTS_ERROR,\n    payload: {\n      asyncPending: false,\n      fetchTextsError: error\n    }\n  };\n}\n\n\n/**\n*  Create an action to update the source text being searched.\n*\n* @param {Object} sourceText - the new source text to search\n* @returns {Object} A redux-style action.\n**/\nexport function updateSourceText(sourceText) {\n  return {\n    type: UPDATE_SOURCE_TEXT,\n    payload: {\n      sourceText: sourceText\n    }\n  };\n}\n\n\n/**\n*  Create an action to update the target text being searched.\n*\n* @param {Object} targetText - the new target text to search\n* @returns {Object} A redux-style action.\n**/\nexport function updateTargetText(targetText = DEFAULT_STATE.targetText) {\n  return {\n    type: UPDATE_TARGET_TEXT,\n    payload: {\n      targetText: targetText\n    }\n  };\n}\n\n\n/**\n*  Create an action to update additional parameters of a search.\n*\n* @param {Object} searchParameters - constraints/settings for the search\n* @returns {Object} A redux-style action.\n**/\nexport function updateSearchParameters(searchParameters = DEFAULT_STATE.searchParameters) {\n  return {\n    type: UPDATE_SEARCH_PARAMETERS,\n    payload: {\n      ...searchParameters\n    }\n  };\n}\n\n\n/**\n *  Create an action to fetch a stoplist from the REST API.\n *\n * @returns {Object} A redux-style action.\n **/\nexport function fetchStoplistPending() {\n  return {\n    type: FETCH_STOPLIST_PENDING,\n    payload: {\n      asyncPending: true\n    }\n  };\n}\n\n\n/**\n *  Create an action to save a stoplist fetched from the REST API.\n *\n * @param {Array} stoplist - list of words to ignore in a search\n * @returns {Object} A redux-style action.\n **/\nexport function fetchStoplistSuccess(stopwords) {\n  return {\n    type: FETCH_STOPLIST_SUCCESS,\n    payload: {\n      asyncPending: false,\n      shouldInitiateSearch: true,\n      stopwords: stopwords\n    }\n  };\n}\n\n\n/**\n *  Create an action to report an error fetching a stoplist from the REST API.\n *\n * @param {Object} error - error log returned from the request\n * @returns {Object} A redux-style action.\n **/\nexport function fetchStoplistError(error = {}) {\n  return {\n    type: FETCH_STOPLIST_ERROR,\n    payload: {\n      asyncPending: false,\n      fetchTextsError: error,\n      shouldInitiateSearch: false\n    }\n  };\n}\n\n\n/**\n *  Create an action to initiate a search through the REST API.\n *\n * @returns {Object} A redux-style action.\n **/\nexport function initiateSearchPending() {\n  return {\n    type: INITIATE_SEARCH_PENDING,\n    payload: {\n      asyncPending: true,\n      shouldInitiateSearch: false,\n      searchInProgress: true\n    }\n  };\n}\n\n\n/**\n *  Create an action to save etched from the REST API.\n *\n * @param {String} searchID - reference ID to look up search status/results\n * @returns {Object} A redux-style action.\n **/\nexport function initiateSearchSuccess(searchID = DEFAULT_STATE.searchID) {\n  return {\n    type: INITIATE_SEARCH_SUCCESS,\n    payload: {\n      asyncPending: false,\n      searchID: searchID,\n      shouldFetchResults: true,\n      shouldInitiateSearch: false\n    }\n  };\n}\n\n\n/**\n *  Create an action to report an error starting a search through the REST API.\n *\n * @param {Object} error - error log returned from the request\n * @returns {Object} A redux-style action.\n **/\nexport function initiateSearchError(error = {}) {\n  return {\n    type: INITIATE_SEARCH_ERROR,\n    payload: {\n      asyncPending: false,\n      initiateSearchError: error,\n      shouldInitiateSearch: false\n    }\n  };\n}\n\n\n/**\n *  Create an action to get the status of a search from the REST API.\n *\n * @returns {Object} A redux-style action.\n **/\nexport function getSearchStatusPending() {\n  return {\n    type: GET_SEARCH_STATUS_PENDING,\n    payload: {\n      asyncPending: true,\n      shouldInitiateSearch: false\n    }\n  };\n}\n\n\n/**\n *  Create an action to handle search status retrieved from the REST API.\n *\n * @param {String} status - The status returned from the server.\n * @param {Bool} shouldFetchResults - whether or not to fetch results.\n * @returns {Object} A redux-style action.\n **/\nexport function getSearchStatusSuccess(status = DEFAULT_STATE.status, shouldFetchResults = DEFAULT_STATE.shouldFetchResults) {\n  return {\n    type: GET_SEARCH_STATUS_SUCCESS,\n    payload: {\n      asyncPending: false,\n      shouldFetchResults: shouldFetchResults,\n      status: status\n    }\n  };\n}\n\n\n/**\n *  Create an action to report an error fetching results from the REST API.\n *\n * @param {Object} error - error log returned from the request\n * @returns {Object} A redux-style action.\n **/\nexport function getSearchStatusError(error = {}) {\n  return {\n    type: GET_SEARCH_STATUS_ERROR,\n    payload: {\n      asyncPending: false,\n      fetchResultsError: error,\n      shouldFetchResults: false\n    }\n  };\n}\n\n\n/**\n *  Create an action to fetch search results from the REST API.\n *\n * @returns {Object} A redux-style action.\n **/\nexport function fetchResultsPending() {\n  return {\n    type: FETCH_RESULTS_PENDING,\n    payload: {\n      asyncPending: true,\n      shouldFetchResults: false\n    }\n  };\n}\n\n\n/**\n *  Create an action to store results fetched from the REST API.\n *\n * @param {Array} results - list of intertext search results\n * @returns {Object} A redux-style action.\n **/\nexport function fetchResultsSuccess(results = DEFAULT_STATE.results) {\n  return {\n    type: FETCH_RESULTS_SUCCESS,\n    payload: {\n      asyncPending: false,\n      results: results,\n      searchInProgress: false,\n      shouldFetchResults: false,\n    }\n  };\n}\n\n\n/**\n *  Create an action to report an error fetching results from the REST API.\n *\n * @param {Object} error - error log returned from the request\n * @returns {Object} A redux-style action.\n **/\nexport function fetchResultsError(error = {}) {\n  return {\n    type: FETCH_RESULTS_ERROR,\n    payload: {\n      asyncPending: false,\n      fetchResultsError: error,\n      searchInProgress: false,\n      shouldFetchResults: false,\n    }\n  };\n}\n\n\n/**\n *  Create an action to update the displayed page of the results table.\n *\n * @param {Number} currentPage - the page of results to show\n * @returns {Object} A redux-style action.\n **/\nexport function updateCurrentPage(currentPage = DEFAULT_STATE.currentPage) {\n  return {\n    type: UPDATE_CURRENT_PAGE,\n    payload: {\n      currentPage: currentPage\n    }\n  };\n}\n\n\n/**\n *  Create an action to update the number of results displayed per page of the results table;.\n * @param {Number} resultsPerPage - the number of rows to display on a page\n * @returns {Object} A redux-style action.\n **/\nexport function updateRowsPerPage(rowsPerPage = DEFAULT_STATE.rowsPerPage) {\n  return {\n    type: UPDATE_ROWS_PER_PAGE,\n    payload: {\n      rowsPerPage: rowsPerPage\n    }\n  };\n}\n\n\n/**\n * Reducer\n **/\n\n\n/**\n * Update the application state.\n *\n * Application state must be updated without mutating the current state. This\n * function applies updates by unrolling the state object, then unrolling the\n * action update to create a deep copy.\n *\n * @param {Object} state - the current application state\n * @param {Object} action - a redux-style action object\n * @returns {Object} The object with updated state.\n **/\nexport function searchReducer(state = DEFAULT_STATE, action = {}) {\n  const disableSearch = (\n    !state.sourceText.object_id &&\n    !state.targetText.object_id &&\n    state.stopwords.length === 0);\n\n  switch (action.type) {\n    case FETCH_LANGUAGES_PENDING:\n      return {\n        ...state,\n        asyncPending: action.payload.asyncPending,\n        disableSearch: disableSearch,\n      };\n    case FETCH_LANGUAGES_SUCCESS:\n      return {\n        ...state,\n        availableLanguages: action.payload.availableLanguages,\n        asyncPending: action.payload.asyncPending,\n        disableSearch: disableSearch,\n        language: action.payload.language\n      };\n    case FETCH_LANGUAGES_ERROR:\n      return {\n        ...state,\n        asyncPending: action.payload.asyncPending,\n        disableSearch: disableSearch,\n        fetchLanguagesError: action.payload.error,\n      };\n    case UPDATE_LANGUAGE:\n      return {\n        ...state,\n        availableTexts: action.payload.availableTexts,\n        disableSearch: disableSearch,\n        language: action.payload.language,\n        stoplist: action.payload.stoplist,\n        searchParameters: action.payload.searchParameters,\n        shouldFetchTexts: action.payload.shouldFetchTexts,\n      };\n    case FETCH_TEXTS_PENDING:\n      return {\n        ...state,\n        asyncPending: action.payload.asyncPending,\n        disableSearch: disableSearch,\n        shouldFetchTexts: action.payload.shouldFetchTexts,\n      };\n    case FETCH_TEXTS_SUCCESS:\n      return {\n        ...state,\n        asyncPending: action.payload.asyncPending,\n        availableTexts: action.payload.availableTexts,\n        disableSearch: disableSearch,\n        shouldFetchTexts: action.payload.shouldFetchTexts,\n      };\n    case FETCH_TEXTS_ERROR:\n      return {\n        ...state,\n        asyncPending: action.payload.asyncPending,\n        disableSearch: disableSearch,\n        fetchTextsError: action.payload.error,\n        shouldFetchTexts: action.payload.shouldFetchTexts,\n      };\n    case UPDATE_SOURCE_TEXT:\n      return {\n        ...state,\n        disableSearch: disableSearch,\n        sourceText: action.payload.sourceText\n      };\n    case UPDATE_TARGET_TEXT:\n      return {\n        ...state,\n        disableSearch: disableSearch,\n        targetText: action.payload.targetText\n      };\n    case UPDATE_SEARCH_PARAMETERS:\n      return {\n        ...state,\n        disableSearch: disableSearch,\n        searchParameters: {\n          ...state.searchParameters,\n          ...action.payload\n        }\n      };\n      case FETCH_STOPLIST_PENDING:\n        return {\n          ...state,\n          asyncPending: action.payload.asyncPending,\n          disableSearch: disableSearch,\n        };\n      case FETCH_STOPLIST_SUCCESS:\n        return {\n          ...state,\n          asyncPending: action.payload.asyncPending,\n          disableSearch: disableSearch,\n          shouldInitiateSearch: action.payload.shouldInitiateSearch,\n          stopwords: action.payload.stopwords,\n        };\n      case FETCH_STOPLIST_ERROR:\n        return {\n          ...state,\n          asyncPending: action.payload.asyncPending,\n          disableSearch: disableSearch,\n          fetchStoplistError: action.payload.error,\n          shouldInitiateSearch: action.payload.shouldInitiateSearch\n        };\n    case INITIATE_SEARCH_PENDING:\n      return {\n        ...state,\n        asyncPending: action.payload.asyncPending,\n        disableSearch: disableSearch,\n        searchInProgress: action.payload.searchInProgress,\n        shouldInitiateSearch: action.payload.shouldInitiateSearch\n      };\n    case INITIATE_SEARCH_SUCCESS:\n      return {\n        ...state,\n        asyncPending: action.payload.asyncPending,\n        disableSearch: disableSearch,\n        searchID: action.payload.searchID,\n        shouldInitiateSearch: action.payload.shouldInitiateSearch\n      };\n    case INITIATE_SEARCH_ERROR:\n      return {\n        ...state,\n        asyncPending: action.payload.asyncPending,\n        disableSearch: disableSearch,\n        initiateSearchError: action.payload.error,\n        shouldInitiateSearch: action.payload.shouldInitiateSearch\n      };\n    case GET_SEARCH_STATUS_PENDING:\n      return {\n        ...state,\n        asyncPending: action.payload.asyncPending,\n        disableSearch: disableSearch,\n        shouldInitiateSearch: action.payload.shouldInitiateSearch\n      };\n    case GET_SEARCH_STATUS_SUCCESS:\n      return {\n        ...state,\n        asyncPending: action.payload.asyncPending,\n        disableSearch: disableSearch,\n        status: action.payload.status,\n        shouldFetchResults: action.payload.shouldFetchResults\n      };\n    case GET_SEARCH_STATUS_ERROR:\n      return {\n        ...state,\n        asyncPending: action.payload.asyncPending,\n        disableSearch: disableSearch,\n        getSearchStatusError: action.payload.error,\n      };\n    case FETCH_RESULTS_PENDING:\n      return {\n        ...state,\n        asyncPending: action.payload.asyncPending,\n        disableSearch: disableSearch,\n      };\n    case FETCH_RESULTS_SUCCESS:\n      return {\n        ...state,\n        asyncPending: action.payload.asyncPending,\n        disableSearch: disableSearch,\n        results: action.payload.results,\n        searchInProgress: action.payload.searchInProgress,\n        shouldFetchResults: action.payload.shouldFetchResults,\n      };\n    case FETCH_RESULTS_ERROR:\n      return {\n        ...state,\n        asyncPending: action.payload.asyncPending,\n        disableSearch: disableSearch,\n        fetchResultsError: action.payload.error,\n        searchInProgress: action.payload.searchInProgress,\n        shouldFetchResults: action.payload.shouldFetchResults,\n      };\n    case UPDATE_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.payload.currentPage,\n        disableSearch: disableSearch,\n      };\n    case UPDATE_ROWS_PER_PAGE:\n      return {\n        ...state,\n        disableSearch: disableSearch,\n        resultsPerPage: action.payload.resultsPerPage,\n      };\n    default:\n      return state;\n  }\n}\n","import axios from 'axios';\n\nimport * as actions from '../../state_management/search';\n\n\nexport function fetchLanguagesAction(pending) {\n  return dispatch => {\n    if (!pending) {\n    console.log('fetching languages')\n      dispatch(actions.fetchLanguagesPending);\n      axios({\n        method: 'get',\n        url: 'http://45.55.219.221:5000/languages',\n        crossDomain: true,\n        responseType: 'json',\n      })\n      .then(response => {\n        dispatch(actions.fetchLanguagesSuccess(response.data.languages));\n        return response.data.languages;\n      })\n      .catch(error => {\n        console.log(error)\n        dispatch(actions.fetchLanguagesError(error));\n      });\n    }\n  }\n}\n\n\nexport function updateLanguageAction(language) {\n  return dispatch => {\n    dispatch(actions.updateLanguage(language));\n  }\n}\n\n\nexport function fetchTextsAction(language, shouldFetch) {\n  return dispatch => {\n    if (shouldFetch) {\n      dispatch(actions.fetchTextsPending());\n      axios({\n        method: 'get',\n        url: 'http://45.55.219.221:5000/texts',\n        crossDomain: true,\n        responseType: 'json',\n        params: {\n          language: language\n        }\n      })\n      .then(response => {\n        dispatch(actions.fetchTextsSuccess(response.data.texts));\n        return response.data.texts;\n      })\n      .catch(error => {\n        dispatch(actions.fetchTextsError(error));\n      });\n    }\n  }\n}\n\n\nexport function updateSourceTextAction(event, value) {\n  const realval = value.object_id !== undefined ? value : {author: '', title: ''};\n  return dispatch => dispatch(actions.updateSourceText(realval));\n}\n\n\nexport function updateTargetTextAction(event, value) {\n  const realval = value.object_id !== undefined ? value : {author: '', title: ''};\n  return dispatch => dispatch(actions.updateTargetText(realval));\n}\n\n\nexport function updateSearchParametersAction(params) {\n  return dispatch => dispatch(actions.updateSearchParameters(params))\n}\n\n\nexport function fetchStoplistAction(feature, stopwords, stoplistBasis, pending) {\n  return dispatch => {\n    if (!pending) {\n      dispatch(actions.fetchStoplistPending());\n\n      let params = {\n        feature: feature,\n        list_size: stopwords,\n      };\n\n      if (stoplistBasis instanceof Array) {\n        params.works = stoplistBasis;\n      }\n      else {\n        params.language = stoplistBasis;\n      }\n\n      axios({\n        method: 'get',\n        url: 'http://45.55.219.221:5000/stopwords',\n        crossDomain: true,\n        responseType: 'json',\n        params: params\n      })\n      .then(response => {\n        console.log(\"success\", response.data.stopwords);\n        dispatch(actions.fetchStoplistSuccess(response.data.stopwords))\n        return response.data.stopwords\n      })\n      .catch(error => {\n        console.log(\"error\", error.response.data);\n        dispatch(actions.fetchStoplistError(error))\n      });\n    }\n  }\n}\n\n\nexport function initiateSearchAction(source, target, params, stopwords, pending) {\n  console.log('initiating search', params);\n  return dispatch => {\n    if (!pending) {\n      dispatch(actions.initiateSearchPending());\n      axios({\n          method: 'post',\n          url: 'http://45.55.219.221:5000/parallels/',\n          crossDomain: true,\n          headers: {\n            contentType: 'x-www-form-urlencoded'\n          },\n          responseType: 'json',\n          data : {\n            source: {\n              object_id: source.object_id,\n              units: params.unitType\n            },\n            target: {\n              object_id: target.object_id,\n              units: params.unitType\n            },\n            method: {\n              name: 'original',\n              feature: params.feature,\n              stopwords: stopwords,\n              freq_basis: params.frequencyBasis,\n              max_distance: parseInt(params.maxDistance, 10),\n              distance_basis: params.distanceBasis\n            }\n          }\n      })\n      .then(response => {\n        console.log(response)\n        if (response.headers.location !== undefined) {\n          const searchID = response.headers.location.split('/')[4];\n          console.log('got id', searchID);\n          dispatch(actions.initiateSearchSuccess(searchID));\n          return searchID;\n        }\n\n        if (response.data.parallels !== undefined) {\n          console.log('initiate got results', response.data.parallels)\n\n          dispatch(actions.fetchResultsSuccess(response.data.parallels));\n        }\n        \n        return undefined;\n      })\n      .catch(error => {\n        console.log(error);\n        dispatch(actions.initiateSearchError(error));\n      });\n    }\n  }\n}\n\n\nexport function getSearchStatusAction(searchID, pending) {\n  console.log('Getting search status');\n  return dispatch => {\n    if (!pending) {\n      dispatch(actions.getSearchStatusPending);\n      axios({\n        method: 'get',\n        url: `http://45.55.219.221:5000/parallels/${searchID}/status/`,\n        crossDomain: true,\n        responseType: 'json'\n      })\n      .then(response => {\n        console.log('got status', response.data.status);\n        const done = response.data.status === 'Done';\n        dispatch(actions.getSearchStatusSuccess(response.data.status, done));\n      })\n      .catch(error => {\n        dispatch(actions.getSearchStatusError(error));\n      })\n    }\n  }\n}\n\n\nexport function fetchResultsAction(searchID, pending) {\n  console.log('Fetching results')\n  return dispatch => {\n    if (!pending) {\n      dispatch(actions.fetchResultsPending());\n      axios({\n          method: 'get',\n          url: `http://45.55.219.221:5000/parallels/${searchID}`,\n          crossDomain: true,\n          responseType: 'json'\n      })\n      .then(response => {\n        console.log('Got results', response.data.parallels.length)\n        dispatch(actions.fetchResultsSuccess(response.data.parallels));\n        return response.data.parallels;\n      })\n      .catch(error => {\n        dispatch(actions.fetchResultsError(error));\n      });\n    }\n  }\n}\n\n\nexport function updateCurrentPageAction(event, value) {\n  return dispatch => dispatch(actions.updateCurrentPage());\n}\n\n\nexport function updateRowsPerPageAction(event, value) {\n  return dispatch => dispatch(actions.updateRowsPerPage());\n}\n","import React, { useState } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowForward';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nimport { fetchLanguagesAction, updateLanguageAction } from '../../../api/corpus';\n\n\nconst useStyles = makeStyles({\n\n});\n\n\nconst a11yProps = (index) => {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\n\nfunction PanelOpenIcon(props) {\n  const { onClick, open } = props;\n  const icon = open ? <ArrowBackIcon /> : <ArrowForwardIcon />\n  return (\n    <Hidden only={['xs', 'sm']}>\n      <IconButton\n        aria-label={open ? \"open panel\" : \"close panel\"}\n        onClick={onClick}\n      >\n        {icon}\n      </IconButton>\n    </Hidden>\n  );\n}\n\n\nfunction LanguagesAppBar(props) {\n  const { dispatch, availableLanguages, fetchLanguages, handlePanelOpen,\n          open, pending, updateLanguage } = props;\n  const [currentTab, setCurrentTab] = useState(0);\n  const classes = useStyles();\n\n  if (!availableLanguages || availableLanguages.length === 0) {\n    fetchLanguages(pending);\n  }\n\n  function handleChangeTab(tabIdx) {\n    const language = availableLanguages[tabIdx];\n    updateLanguage(language);\n    setCurrentTab(tabIdx);\n  }\n\n  let tabs = [];\n\n  if (availableLanguages && availableLanguages.length > 0) {\n    tabs = availableLanguages.map((item, idx) => {\n      return (\n        <Tab\n          key={item}\n          label={item}\n          value={idx}\n          onClick={() => handleChangeTab(idx)}\n          { ...a11yProps(idx) }\n        />\n      )\n    });\n  }\n\n  return (\n    <AppBar position=\"static\">\n      <Grid container spacing={2}>\n        <Grid item xs={1}>\n          <PanelOpenIcon\n            onClick={handlePanelOpen}\n            open={open}\n          />\n        </Grid>\n        <Grid item xs={11}>\n          <Tabs\n            className={classes.tabs}\n            value={currentTab}\n          >\n            {tabs}\n          </Tabs>\n        </Grid>\n      </Grid>\n    </AppBar>\n  );\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    availableLanguages: state.availableLanguages,\n    language: state.language,\n    pending: state.asyncPending\n  };\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchLanguages: fetchLanguagesAction,\n  updateLanguage: updateLanguageAction\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguagesAppBar);\n","import React, { useState } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport { getSearchStatusAction, fetchResultsAction } from '../../../api/corpus';\n\n\nconst useStyles = makeStyles(props => theme => ({\n    root: {\n        display: 'flex',\n        height: 100,\n        flexDirection: \"column\",\n        justifyContent: \"center\"\n    },\n    spacer: {\n        height: '30vh'\n    }\n}));\n\n\nfunction AwaitingSearchCard(props) {\n    return (\n        <Card>\n            <CardMedia>\n                <ArrowBackIcon />\n            </CardMedia>\n            <CardContent>\n                <Typography variant=\"subtitle1\">\n                    Run a Search to find parallels.\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}\n\n\nfunction SearchInProgressCard(props) {\n    return (\n        <Card>\n            <CardMedia>\n                <CircularProgress />\n            </CardMedia>\n            <CardContent>\n                <Typography variant=\"subtitle1\">\n                    Finding parallels.\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}\n\n\nfunction ResultsPlaceholder(props) {\n    const { asyncPending, fetchResults, getSearchStatus, results, searchID,\n            searchInProgress, shouldInitiateSearch, status } = props;\n    const classes = useStyles(props);\n\n    if (results.length === 0) {\n        if (searchInProgress && (status === null || status.toLowerCase() !== 'done')) {\n            setTimeout(() => getSearchStatus(searchID, asyncPending), 500);\n        }\n        \n        if (!searchInProgress && status !== null && status.toLowerCase() === 'done') {\n            fetchResults(searchID, asyncPending);\n        }\n    }\n\n    const card = !searchInProgress ? <AwaitingSearchCard /> : <SearchInProgressCard />;\n\n    return (\n        <div className={classes.root}>\n            {card}\n        </div>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    asyncPending: state.asyncPending,\n    results: state.results,\n    searchID: state.searchID,\n    searchInProgress: state.searchInProgress,\n    shouldInitiateSearch: state.shouldInitiateSearch,\n    status: state.status\n});\n\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchResults: fetchResultsAction,\n    getSearchStatus: getSearchStatusAction,\n}, dispatch)\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultsPlaceholder);","import React, { useState } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { Typography } from '@material-ui/core';\n\nimport { fetchResultsAction,\n         getSearchStatusAction,\n         updateCurrentPageAction,\n         updateRowsPerPageAction, \n         initiateSearchAction} from '../../../api/corpus';\nimport ResultsPlaceholder from '../ResultsPlaceholder';\n\nconst useStyles = makeStyles(props => theme => ({\n  root: {\n    display: 'flex',\n    height: '100%',\n    width: '100%'\n  }\n}));\n\n\nfunction ResultsTableHeader(props) {\n  const { labels, sortHeader, sortOrder,\n          updateSortHeader, updateSortOrder } = props;\n  const sortDirection = sortOrder === 1 ? 'asc' : 'desc';\n\n  const handleSortUpdate = header => {\n    const newSortHeader = header.toLowerCase();\n    const newSortOrder = sortHeader === newSortHeader ? -sortOrder : -1;\n    updateSortHeader(newSortHeader);\n    updateSortOrder(newSortOrder);\n  }\n\n  const headCells = labels.map(item => {\n      const itemNorm = item.toLowerCase();\n      return (\n        <TableCell\n          key={itemNorm}\n          align=\"center\"\n          onClick={() => handleSortUpdate(itemNorm)}\n          sortDirection={sortHeader === itemNorm ? sortDirection : false}\n          variant=\"head\"\n        >\n          <TableSortLabel\n            key={itemNorm}\n            active={sortHeader === itemNorm}\n            direction={sortDirection}\n          >\n            {item}\n          </TableSortLabel>\n        </TableCell>\n      );\n    }\n  );\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells}\n      </TableRow>\n    </TableHead>\n  );\n}\n\n\nfunction ResultsTableBody(props) {\n  const { results } = props;\n\n  const bodyCells = results.map((item, idx) => {\n    return (\n      <TableRow\n        hover\n        tabIndex={-1}\n        key={item.source_tag + item.target_tag + item.matched_features.join(', ')}\n      >\n        <TableCell variant=\"body\">\n          <Typography\n            align=\"left\"\n          >\n            {idx + 1}\n          </Typography>\n        </TableCell>\n        <TableCell\n          align=\"left\"\n          variant=\"body\"\n        >\n          <Typography><b>{item.source_tag}</b>:</Typography>\n          <Typography>{item.source_snippet}</Typography>\n        </TableCell>\n        <TableCell\n          align=\"left\"\n          variant=\"body\"\n        >\n          <Typography><b>{item.target_tag}</b>:</Typography>\n          <Typography>{item.target_snippet}</Typography>\n        </TableCell>\n        <TableCell\n          align=\"center\"\n          variant=\"body\"\n        >\n          <Typography>\n            {item.matched_features.join(', ')}\n            </Typography>\n        </TableCell>\n        <TableCell\n          align=\"right\"\n          variant=\"body\"\n        >\n          <Typography>\n            {Math.round(item.score)}\n          </Typography>\n        </TableCell>\n      </TableRow>\n    );\n  });\n\n  return (\n    <TableBody>\n      {bodyCells}\n    </TableBody>\n  );\n}\n\n\nfunction ResultsTable(props) {\n  const { asyncPending, currentPage, fetchResults, getSearchStatus, initiateSearch, resultCount, results,\n          rowsPerPage, searchID, searchParams, shouldFetchResults, shouldInitiateSearch,\n          sourceText, status, stopwords, targetText, updateCurrentPage, updateRowsPerPage } = props;\n  \n  const [ sortHeader, setSortHeader ] = useState('Score');\n  const [ sortOrder, setSortOrder ] = useState(0);\n\n  const classes = useStyles(props);\n\n  const headerLabels = ['', 'Source', 'Target', 'Matched On', 'Score'];\n\n  console.log(results)\n;\n  if (shouldInitiateSearch) {\n    initiateSearch(sourceText, targetText, searchParams, stopwords, asyncPending);\n  }\n\n  // if (searchID !== null && (status === null || status.toLowerCase() !== 'done')) {\n  //   setTimeout(() => getSearchStatus(searchID, asyncPending), 2000);\n  // }\n\n  // if (shouldFetchResults && results.length === 0) {\n  //   fetchResults(searchID, asyncPending)\n  // }\n\n  const start = currentPage * rowsPerPage;\n  const end = Math.min(start + rowsPerPage, results.length);\n\n  const displayResults = results.sort((a, b) => {\n    if (b[sortHeader] < a[sortHeader]) {\n      return -1 * sortOrder;\n    }\n    else if (b[sortHeader] > a[sortHeader]) {\n      return 1 * sortOrder;\n    }\n    else {\n      return 0;\n    }\n  }).slice(start, end);\n\n  return (\n    <div className={classes.root}>\n      { results.length === 0\n        ? <ResultsPlaceholder />\n        : <div>\n            <Table>\n              <ResultsTableHeader\n                labels={headerLabels}\n                sortHeader={sortHeader}\n                sortOrder={sortOrder}\n                updateSortHeader={setSortHeader}\n                updateSortOrder={setSortOrder}\n              />\n              <ResultsTableBody results={displayResults} />\n            </Table>\n            <TablePagination\n              component=\"div\"\n              count={results.length}\n              labelRowsPerPage=\"Results per page:\"\n              onChangePage={updateCurrentPage}\n              onChangeRowsPerPage={updateRowsPerPage}\n              page={currentPage}\n              rowsPerPage={rowsPerPage}\n              rowsPerPageOptions={[50, 100, 200, 500]}\n            />\n          </div>\n      }\n    </div>\n  )\n}\n\n\nconst mapStateToProps = state => ({\n  asyncPending: state.asyncPending,\n  currentPage: state.currentPage,\n  pending: state.asyncPending,\n  resultCount: state.resultCount,\n  results: state.results,\n  rowsPerPage: state.rowsPerPage,\n  searchID: state.searchID,\n  searchParams: state.searchParameters,\n  shouldFetchResults: state.shouldFetchResults,\n  shouldInitiateSearch: state.shouldInitiateSearch,\n  sourceText: state.sourceText,\n  stopwords: state.stopwords,\n  status: state.status,\n  targetText: state.targetText,\n});\n\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  initiateSearch: initiateSearchAction,\n  fetchResults: fetchResultsAction,\n  getSearchStatus: getSearchStatusAction,\n  updateCurrentPage: updateCurrentPageAction,\n  updateRowsPerPage: updateRowsPerPageAction\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultsTable);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n\nconst useStyles = makeStyles({\n  select: {\n    marginTop: 10,\n    marginLeft: '5%',\n    width: '90%'\n  }\n});\n\n\nfunction LabeledSelect(props) {\n  const { handleChange, helperText, options, value } = props;\n  const classes = useStyles();\n\n  const menuItems = options.map((x, i) => {\n    return (<MenuItem value={x.value} key={x.value}>{x.label}</MenuItem>);\n  });\n\n  return (\n    <FormControl fullWidth>\n      <Select\n        onChange={handleChange}\n        value={value}\n        variant=\"outlined\"\n      >\n        {menuItems}\n      </Select>\n      <FormHelperText>{helperText}</FormHelperText>\n    </FormControl>\n  );\n}\n\n\nexport default LabeledSelect;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport LabeledSelect from '../../common/LabeledSelect';\n\nimport { updateSearchParameters } from '../../../state_management/search';\n\nconst useStyles = makeStyles(theme => ({\n  select: {\n    marginTop: 10,\n    marginLeft: '5%',\n    width: '90%'\n  }\n}));\n\n\nfunction prepListItem(item) {\n  return {\n    label: item,\n    value: item\n  };\n}\n\n\nconst dummyUnitTypes = ['line', 'phrase'];\nconst dummyFeatures = ['form', 'lemmata', 'semantic', 'lemma + semantic', 'sound'];\nconst dummyStoplist = ['0', '10', '20', '30', '40', '50', '100', '150', '200'];\nconst dummyStoplistBasis = ['corpus', 'target', 'source', 'target + source'];\nconst dummyScoreBasis = ['stem', 'word'];\nconst dummyFrequencyBasis = ['corpus', 'texts'];\nconst dummyMaxDistance = ['None', '10 words', '20 words', '30 words', '40 words', '50 words'];\nconst dummyDistanceMetric = ['frequency', 'frequency-source', 'frequency-target', 'span', 'span-source', 'span-target'];\nconst dummyDropScoresBelow = ['No Cutoff', '3', '4', '5', '6', '7', '8', '9'];\n\n\nfunction AdvancedOptionsGroup(props) {\n  const { dispatch, unitType, feature, stoplist, stoplistBasis,\n          scoreBasis, frequencyBasis, maxDistance,\n          distanceBasis, dropScoresBelow } = props;\n\n  const classes = useStyles();\n\n  const handleChange = label => event => {\n    dispatch(updateSearchParameters({ [label]: event.target.value }));\n  }\n\n  const unitTypesList = dummyUnitTypes.map(prepListItem);\n  const featuresList = dummyFeatures.map(prepListItem);\n  const stoplistList = dummyStoplist.map(prepListItem);\n  const stoplistBasisList = dummyStoplistBasis.map(prepListItem);\n  const scoreBasisList = dummyScoreBasis.map(prepListItem);\n  const frequencyBasisList = dummyFrequencyBasis.map(prepListItem);\n  const maxDistanceList = dummyMaxDistance.map(prepListItem);\n  const distanceBasisList = dummyDistanceMetric.map(prepListItem);\n  const dropScoresBelowList = dummyDropScoresBelow.map(prepListItem);\n\n  return (\n    <div>\n      <Grid\n        container\n        spacing={2}\n        justify=\"space-evenly\"\n      >\n\n        <Grid item xs={12}>\n          <LabeledSelect\n            handleChange={handleChange('unitType')}\n            helperText={'Compare lines of text or complete thoughts.'}\n            options={unitTypesList}\n            value={unitType}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <LabeledSelect\n            handleChange={handleChange('feature')}\n            helperText={'Select the feature to compare on.'}\n            options={featuresList}\n            value={feature}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <LabeledSelect\n            handleChange={handleChange('stoplist')}\n            helperText={'Set the size of the stoplist'}\n            options={stoplistList}\n            value={stoplist}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <LabeledSelect\n            handleChange={handleChange('stoplistBasis')}\n            helperText={'Specify the source of stoplist frequencies.'}\n            options={stoplistBasisList}\n            value={stoplistBasis}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <LabeledSelect\n            handleChange={handleChange('scoreBasis')}\n            helperText={'Specify whether to measure scoring frequency by word or stem.'}\n            options={scoreBasisList}\n            value={scoreBasis}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <LabeledSelect\n            handleChange={handleChange('frequencyBasis')}\n            helperText={'Specify the source of scoring frequencies.'}\n            options={frequencyBasisList}\n            value={frequencyBasis}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <LabeledSelect\n            handleChange={handleChange('maxDistance')}\n            helperText={'Specify the maximum number of words between bigram tokens.'}\n            options={maxDistanceList}\n            value={maxDistance}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <LabeledSelect\n            handleChange={handleChange('distanceMetric')}\n            helperText={'Specify whether to base distance on porition or frequency.'}\n            options={distanceBasisList}\n            value={distanceBasis}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <LabeledSelect\n            handleChange={handleChange('dropScoresBelow')}\n            helperText={'Specify the minimum score to show.'}\n            options={dropScoresBelowList}\n            value={dropScoresBelow}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\n\nfunction mapStateToProps(state) {\n  const { unitType, feature, stoplist, stoplistBasis,\n          scoreBasis, frequencyBasis, maxDistance,\n          distanceBasis, dropScoresBelow } = state.searchParameters;\n  return { unitType, feature, stoplist, stoplistBasis,\n           scoreBasis, frequencyBasis, maxDistance,\n           distanceBasis, dropScoresBelow };\n}\n\n\nexport default connect(mapStateToProps)(AdvancedOptionsGroup);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport uniqBy from 'lodash/uniqBy';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { loadTextMetadata } from '../../../api/corpus';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  heading: {\n    marginBottom: '10px'\n  },\n  select: {\n    marginBottom: '10px',\n    [theme.breakpoints.up('md')]: {\n\n    },\n    [theme.breakpoints.down('sm')]: {\n\n    }\n  }\n}));\n\n\nfunction TextSelectGroup(props) {\n  const { handleTextChange, index, loading, loadingText, onOpen,\n          selection, textList, title } = props;\n  const classes = useStyles();\n\n  const authorItems = uniqBy(textList, 'author');\n  const textItems = textList.filter(t => selection.author === '' || t.author.toLowerCase() === selection.author);\n\n  return (\n    <div>\n      <Typography\n        align=\"left\"\n        className={classes.heading}\n        variant=\"h5\"\n      >\n        {title}\n      </Typography>\n      <Autocomplete\n        className={classes.select}\n        defaultValue={{author: '', title: ''}}\n        getOptionLabel={option => option.author !== undefined ? option.author : option}\n        loading={loading}\n        loadingText={loadingText}\n        onChange={handleTextChange}\n        onOpen={onOpen}\n        options={authorItems}\n        renderInput={params => (\n          <TextField {...params}\n            label={\"Select an Author\"}\n            variant=\"outlined\"\n            fullWidth\n          />\n        )}\n        value={selection}\n      />\n      <Autocomplete\n        className={classes.select}\n        defaultValue={{author: '', title: ''}}\n        getOptionLabel={option => option.title !== undefined ? option.title : option}\n        loading={loading}\n        loadingText={loadingText}\n        onChange={handleTextChange}\n        onOpen={onOpen}\n        options={textItems}\n        renderInput={params => (\n          <TextField {...params}\n            label={\"Select a Text\"}\n            variant=\"outlined\"\n            fullWidth\n          />\n        )}\n        value={selection}\n      />\n    </div>\n  );\n}\n\n\nexport default TextSelectGroup;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport AdvancedOptionsGroup from '../AdvancedOptionsGroup'\nimport TextSelectGroup from '../TextSelectGroup';\n\nimport { fetchStoplistAction, fetchTextsAction,\n         updateSourceTextAction, updateTargetTextAction } from '../../../api/corpus';\n\nconst useStyles = makeStyles({\n  formControl: {\n    minWidth: 120,\n  }\n});\n\n\nfunction SearchParametersForm(props) {\n  const { availableTexts, disableSearch, fetchTexts, fetchStoplist, language, pending,\n          searchParameters, shouldFetchStoplist, shouldFetchTexts, sourceText,\n          stopwords, targetText, updateSource, updateTarget } = props;\n  \n  const classes = useStyles();\n  \n  const basis = (searchParameters !== undefined && searchParameters.stoplistBasis === 'corpus'\n                 ? language\n                 : [sourceText.object_id, targetText.object_id]);\n\n  return (\n    <section>\n      <ExpansionPanel\n        expanded={true}\n      >\n        <ExpansionPanelDetails>\n          <Grid\n            container\n            spacing={2}\n            justify=\"space-evenly\"\n          >\n            <Grid item md={12} xs={12}>\n              <TextSelectGroup\n                handleTextChange={updateSource}\n                loading={pending}\n                loadingText={\n                  <Typography variant=\"h6\">\n                    <CircularProgress />{`Loading ${language} corpus`}\n                  </Typography>\n                }\n                onOpen={() => fetchTexts(language, shouldFetchTexts)}\n                selection={sourceText}\n                textList={availableTexts}\n                title=\"Source Text\"\n              />\n            </Grid>\n            <Grid item md={12} xs={12}>\n              <TextSelectGroup\n                handleTextChange={updateTarget}\n                loading={pending}\n                loadingText={\n                  <Typography variant=\"p\">\n                    <CircularProgress />{`Loading ${language} corpus`}\n                  </Typography>\n                }\n                onOpen={() => fetchTexts(language, shouldFetchTexts)}\n                selection={targetText}\n                textList={availableTexts}\n                title=\"Target Text\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                color=\"primary\"\n                disabled={disableSearch}\n                onClick={() => fetchStoplist(searchParameters.feature, parseInt(searchParameters.stoplist, 10), basis, pending)}\n                variant=\"contained\"\n              >\n                Search\n              </Button>\n            </Grid>\n          </Grid>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          aria-controls=\"advanced-options-form\"\n          expandIcon={<ExpandMoreIcon />}\n          id=\"advanced-options-header\"\n        >\n          <Typography\n            align=\"center\"\n            variant=\"h5\"\n          >\n            Advanced Options\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <AdvancedOptionsGroup />\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </section>\n  );\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    availableTexts: state.availableTexts,\n    disableSearch: state.disableSearch,\n    language: state.language,\n    pending: state.asyncPending,\n    searchParameters: state.searchParameters,\n    shouldFetchStoplist: state.shouldFetchStoplist,\n    shouldFetchTexts: state.shouldFetchTexts,\n    sourceText: state.sourceText,\n    stopwords: state.stopwords,\n    targetText: state.targetText,\n  };\n};\n\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchTexts: fetchTextsAction,\n  fetchStoplist: fetchStoplistAction,\n  updateSource: updateSourceTextAction,\n  updateTarget: updateTargetTextAction\n}, dispatch);\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchParametersForm);\n","import React, { useState } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport ResultsTable from '../ResultsTable';\nimport SearchParametersForm from '../SearchParametersForm';\n\n\nconst styles = theme => ({\n  root: {\n    paddingTop: 0,\n    paddingmarginBottom: 0,\n    paddingmarginLeft: 0,\n    paddingRight: 0,\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n      height: '86.5vh'\n    },\n    [theme.breakpoints.down('xs')]: {\n      display: 'inline-block',\n      height: '100%'\n    }\n  },\n  divider: {\n    marginTop: 0,\n    marginBottom: 0,\n    marginLeft: 0,\n    marginRight: 0,\n    width: '10px',\n    '&:hover': {\n      cursor: 'col-resize'\n    },\n    [theme.breakpoints.up('md')]: {\n      float: 'left'\n    }\n  }\n});\n\n\nconst panelStyles = makeStyles(theme => ({\n  root: {\n    marginTop: 0,\n    marginBottom: 0,\n    marginLeft: 0,\n    marginRight: 0,\n    [theme.breakpoints.up('md')]: {\n      display : props => props.width > 0 ? 'auto' : 'hidden',\n      float: 'left',\n      overflowX: 'auto',\n      overflowY: 'auto',\n      width: props => props.width,\n      minWidth: props => props.width > 0 ? props.minWidth : 0\n    },\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      minWidth: '100%'\n    }\n  }\n}));\n\n\nconst getTotalWidth = () => window.innerWidth !== null\n      ? window.innerWidth\n      : window.document.documentElement.clientWidth;\n\n\nfunction ReactivePanel(props) {\n  const { children } = props;\n  const classes = panelStyles(props);\n\n  return (\n    <Box\n      className={classes.root}\n    >\n      {children}\n    </Box>\n  );\n}\n\n\nclass ReactivePanels extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      leftWidth: props.leftMinWidth,\n      moving: false,\n      rightWidth: 100 - props.leftMinWidth,\n      unit: '%',\n    };\n  }\n\n  getTotalWidth = () => window.innerWidth !== null\n      ? window.innerWidth\n      : window.document.documentElement.clientWidth;\n\n  handleClickDivider = event => {\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    }\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n    this.setState({moving: true});\n  }\n\n  handleMoveDivider = event => {\n    if (this.state.moving) {\n      if (event.stopPropagation) {\n        event.stopPropagation();\n      }\n      if (event.preventDefault) {\n        event.preventDefault();\n      }\n      const totalWidth = this.getTotalWidth();\n      const mouseX = event.pageX;\n      const rightMinWidth = this.props.rightMinWidth * totalWidth / 100;\n      const leftMaxWidth = totalWidth - rightMinWidth;\n      const leftMinWidth = this.props.leftMinWidth * totalWidth / 100;\n      const leftWidth = Math.min(Math.max(mouseX, leftMinWidth), leftMaxWidth);\n      const rightWidth = totalWidth - leftWidth;\n\n      this.setState({ leftWidth, rightWidth, unit: 'px' });\n    }\n  }\n\n  handleReleaseDivider = event => {\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    }\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n    this.setState({moving: false});\n  }\n\n  render() {\n    const { leftWidth, rightWidth, unit } = this.state;\n    const { classes, leftMinWidth, open, rightMinWidth } = this.props;\n\n    const totalWidth = this.getTotalWidth()\n    const leftWidthVal = open ? `${leftWidth}${unit}` : \"0\";\n    const leftMinWidthVal = totalWidth * (leftMinWidth / 100);\n    const rightWidthVal = open ? `${rightWidth - 2}${unit}` : \"100%\";\n    const rightMinWidthVal = totalWidth * (rightMinWidth / 100);\n\n    return (\n      <Box\n        className={classes.root}\n        component=\"div\"\n        onMouseMove={this.handleMoveDivider}\n        onMouseUp={this.handleReleaseDivider}\n      >\n        <ReactivePanel\n          minWidth={leftMinWidthVal}\n          width={leftWidthVal}\n        >\n          <SearchParametersForm />\n        </ReactivePanel>\n        {open &&\n          <Hidden only={['xs', 'sm']}>\n            <Divider\n              className={classes.divider}\n              onMouseDown={this.handleClickDivider}\n              orientation='vertical'\n            />\n          </Hidden>\n        }\n        <ReactivePanel\n          minWidth={rightMinWidthVal}\n          width={rightWidthVal}\n        >\n          <ResultsTable />\n        </ReactivePanel>\n      </Box>\n    );\n  }\n}\n\n\nexport default withStyles(styles)(ReactivePanels);\n","import React, { useState, useEffect } from 'react';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { makeStyles } from '@material-ui/styles';\n\nimport Grid from '@material-ui/core/Grid';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport LanguagesAppBar from '../LanguagesAppBar';\nimport ReactivePanels from '../ReactivePanels';\n\nimport { searchReducer, DEFAULT_STATE } from '../../../state_management/search';\n\n\nconst middleware = [thunk];\n\n\nconst store = createStore(\n  searchReducer,\n  DEFAULT_STATE,\n  applyMiddleware(...middleware));\n\n\nconst getTotalWidth = () => window.innerWidth !== null\n  ? window.innerWidth\n  : window.document.documentElement.clientWidth;\n\n\nfunction SearchPrototypeD(props) {\n  const [isOpen, setIsOpen] = useState(true);\n\n  return (\n    <main>\n      <Provider store={store}>\n        <Grid container>\n          <Grid item xs={12}>\n            <LanguagesAppBar\n              handlePanelOpen={() => setIsOpen(!isOpen)}\n              open={isOpen}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <ReactivePanels\n              leftMinWidth={25}\n              open={isOpen}\n              rightMinWidth={35}\n              />\n            </Grid>\n        </Grid>\n      </Provider>\n    </main>\n  );\n}\n\n\nexport default SearchPrototypeD;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\"\n\nimport NavBar from './components/common/NavBar';\nimport SearchPrototypeD from './components/search/SearchPrototypeD';\n\nconst Index = () => <h2>Home</h2>;\n\nclass App extends Component {\n  render() {\n    const routes = [\n      {link: \"/\", name: \"Search\"}\n    ]\n\n    return (\n      <Router>\n        <div className=\"App\">\n          <NavBar routes={routes} />\n          <Route path=\"/\" exact component={SearchPrototypeD} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif (module.hot) {\n    module.hot.accept();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}